# multistage build, oterwise we get a 20 gigabyte image

# Stage 1: Build the application and install dependencies
FROM python:3.12-slim AS builder

# Install system dependencies required for building
RUN apt-get update && apt-get install -y \
    git \
    python3-lxml \
    gcc \
    g++ \
    musl-dev \
    python3-dev \
    libgdal-dev \
    gdal-bin \
    libkrb5-dev \
    krb5-config

# Install uv
RUN pip install uv

# Set up a virtual environment and install dependencies
WORKDIR /usr/src/app/
COPY pyproject.toml uv.lock ./
RUN uv venv .venv
RUN chmod +x .venv/bin/activate && .venv/bin/activate && \
    uv sync --no-install-project --extra workflows

# Stage 2: Create the runtime image
FROM python:3.12-slim

# Install runtime dependencies (if different from build dependencies)
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-lxml \
    python3-gdal \
    gdal-bin \
    libkrb5-3 \
    && rm -rf /var/lib/apt/lists/*

    # libgdal29- Assuming gdal-bin installs version 29, adjust if needed
# libkrb5-3 Adjust if a different version is required at runtime

# Copy the virtual environment from the builder stage
COPY --from=builder /usr/src/app/.venv /usr/src/app/.venv

# Copy application code and configurations
WORKDIR /usr/src/app/
COPY configs/dagster/dagster.yaml /usr/src/app/
COPY workflows /usr/src/app/workflows

# Set environment variables
ENV DAGSTER_HOME=/usr/src/app/
ENV PATH="/usr/src/app/.venv/bin:$PATH"

# Set the entrypoint and command
ENTRYPOINT []
CMD ["dagster", "api", "grpc", "-h", "0.0.0.0", "-p", "4000", "-m", "workflows.public.public", "-d", "/usr/src/app/"]
